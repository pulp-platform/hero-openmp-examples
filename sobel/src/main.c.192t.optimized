
;; Function main._omp_fn.0 (main._omp_fn.0, funcdef_no=26, decl_uid=5705, cgraph_uid=26, symbol_order=26)

main._omp_fn.0 (struct .omp_data_t.27 & restrict .omp_data_i)
{
  byte * * _3;
  byte * * _5;
  byte * * _7;
  byte * * _9;
  byte * * _11;
  int * _13;
  int * _15;
  byte * _18;
  byte * _19;
  byte * _20;
  byte * _21;
  byte * _22;
  int _23;
  int _24;

  <bb 2>:
  _3 = *.omp_data_i_2(D).rgb;
  _18 = GOMP_pulp_RAB_tryread (_3);
  _5 = *.omp_data_i_2(D).gray;
  _19 = GOMP_pulp_RAB_tryread (_5);
  _7 = *.omp_data_i_2(D).sobel_h_res;
  _20 = GOMP_pulp_RAB_tryread (_7);
  _9 = *.omp_data_i_2(D).sobel_v_res;
  _21 = GOMP_pulp_RAB_tryread (_9);
  _11 = *.omp_data_i_2(D).contour_img;
  _22 = GOMP_pulp_RAB_tryread (_11);
  _13 = *.omp_data_i_2(D).width;
  _23 = GOMP_pulp_RAB_tryread (_13);
  _15 = *.omp_data_i_2(D).height;
  _24 = GOMP_pulp_RAB_tryread (_15);
  sobelFilter (_18, _19, _20, _21, _22, _23, _24); [tail call]
  return;

}



;; Function main (main, funcdef_no=25, decl_uid=5517, cgraph_uid=25, symbol_order=25) (executed once)

Removing basic block 26
Removing basic block 27
Removing basic block 28
Removing basic block 29
Removing basic block 30
Removing basic block 31
Removing basic block 32
Removing basic block 33
Removing basic block 34
Removing basic block 35
Removing basic block 36
Removing basic block 37
Removing basic block 38
Removing basic block 39
Removing basic block 40
main (int argc, char * * argv)
{
  const unsigned char * __s2;
  int arg_index;
  char * height_token;
  char * width_token;
  int gray_file;
  int inter_files;
  int height;
  int width;
  int rgb_size;
  byte * contour_img;
  byte * sobel_v_res;
  byte * sobel_h_res;
  byte * gray;
  byte * rgb;
  char * file_gray;
  char * file_out_v;
  char * file_out_h;
  char * file_out;
  char * file_in;
  struct .omp_data_t.27 .omp_data_arr.28;
  unsigned int .omp_data_sizes.29[12];
  static unsigned char .omp_data_kinds.30[12] = {2, 20, 2, 20, 2, 20, 2, 20, 17, 17, 1, 20};
  int _9;
  char * _19;
  int width.2_28;
  int _30;
  unsigned int arg_index.5_35;
  unsigned int _36;
  char * * _37;
  unsigned char _39;
  unsigned char _42;
  unsigned char _45;
  unsigned char _56;
  int _59;
  sizetype _61;
  char * * _62;
  int _67;
  sizetype _69;
  char * * _70;
  sizetype _73;
  char * * _74;
  unsigned int gray_size.8_79;
  void * gray.9_81;
  void * sobel_h_res.10_84;
  void * sobel_v_res.11_87;
  void * contour_img.12_90;
  sizetype rgb_size.18_92;
  byte * rgb.19_93;
  byte * gray.17_121;
  byte * sobel_h_res.16_123;
  byte * sobel_v_res.15_125;
  byte * contour_img.14_127;
  byte * gray.17_129;
  byte * sobel_h_res.16_131;
  byte * sobel_v_res.15_133;
  byte * contour_img.14_135;
  int _144;
  int _145;

  <bb 2>:
  # DEBUG inter_files => 0
  # DEBUG gray_file => 0
  if (argc_13(D) <= 3)
    goto <bb 3>;
  else
    goto <bb 4>;

  <bb 3>:
  puts (&"sobel file_in file_out 123x456 [-i file_h_out file_v_out] [-g file_gray]"[0]);
  goto <bb 25>;

  <bb 4>:
  file_in_17 = MEM[(char * *)argv_16(D) + 4B];
  # DEBUG file_in => file_in_17
  file_out_18 = MEM[(char * *)argv_16(D) + 8B];
  # DEBUG file_out => file_out_18
  _19 = MEM[(char * *)argv_16(D) + 12B];
  width_token_21 = strtok (_19, "x");
  # DEBUG width_token => width_token_21
  if (width_token_21 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;

  <bb 5>:
  # DEBUG __nptr => width_token_21
  _144 = strtol (width_token_21, 0B, 10);
  width = _144;
  height_token_25 = strtok (0B, "x");
  # DEBUG height_token => height_token_25
  if (height_token_25 != 0B)
    goto <bb 7>;
  else
    goto <bb 6>;

  <bb 6>:
  puts (&"Bad image size argument"[0]);
  goto <bb 25>;

  <bb 7>:
  # DEBUG __nptr => height_token_25
  _145 = strtol (height_token_25, 0B, 10);
  height = _145;
  # DEBUG D#6 => width
  # DEBUG D#5 => D#6 * _145
  # DEBUG rgb_size => D#5 * 3
  # DEBUG arg_index => 4
  # DEBUG arg_index => 4
  # DEBUG gray_file => 0
  # DEBUG inter_files => 0
  # DEBUG file_gray => file_gray_34(D)
  # DEBUG file_out_v => file_out_v_33(D)
  # DEBUG file_out_h => file_out_h_32(D)
  if (argc_13(D) != 4)
    goto <bb 8>;
  else
    goto <bb 20>;

  <bb 8>:
  # file_out_h_158 = PHI <file_out_h_32(D)(7)>
  # file_out_v_5 = PHI <file_out_v_33(D)(7)>
  # file_gray_44 = PHI <file_gray_34(D)(7)>
  # inter_files_159 = PHI <0(7)>
  # gray_file_154 = PHI <0(7)>
  # arg_index_153 = PHI <4(7)>

  <bb 9>:
  # file_out_h_168 = PHI <file_out_h_158(8), file_out_h_52(19)>
  # file_out_v_162 = PHI <file_out_v_5(8), file_out_v_51(19)>
  # file_gray_166 = PHI <file_gray_44(8), file_gray_50(19)>
  # inter_files_161 = PHI <inter_files_159(8), inter_files_49(19)>
  # gray_file_165 = PHI <gray_file_154(8), gray_file_48(19)>
  # arg_index_155 = PHI <arg_index_153(8), arg_index_29(19)>
  # DEBUG arg_index => arg_index_155
  # DEBUG gray_file => gray_file_165
  # DEBUG inter_files => inter_files_161
  # DEBUG file_gray => file_gray_166
  # DEBUG file_out_v => file_out_v_162
  # DEBUG file_out_h => file_out_h_168
  # DEBUG __s2_len => 2
  arg_index.5_35 = (unsigned int) arg_index_155;
  _36 = arg_index.5_35 * 4;
  _37 = argv_16(D) + _36;
  __s2_38 = *_37;
  # DEBUG __s2 => __s2_38
  _39 = *__s2_38;
  # DEBUG D#9 => (int) _39
  # DEBUG __result => 45 - D#9
  if (_39 == 45)
    goto <bb 10>;
  else
    goto <bb 18>;

  <bb 10>:
  _42 = MEM[(const unsigned char *)__s2_38 + 1B];
  # DEBUG D#2 => (int) _42
  # DEBUG __result => 105 - D#2
  if (_42 == 105)
    goto <bb 11>;
  else
    goto <bb 14>;

  <bb 11>:
  _45 = MEM[(const unsigned char *)__s2_38 + 2B];
  # DEBUG D#4 => (int) _45
  # DEBUG D#3 => -D#4
  # DEBUG __result => D#3
  # DEBUG __result => D#3
  if (_45 == 0)
    goto <bb 12>;
  else
    goto <bb 18>;

  <bb 12>:
  _67 = arg_index_155 + 2;
  if (argc_13(D) <= _67)
    goto <bb 3>;
  else
    goto <bb 13>;

  <bb 13>:
  # DEBUG inter_files => 1
  _69 = _36 + 4;
  _70 = argv_16(D) + _69;
  file_out_h_71 = *_70;
  # DEBUG file_out_h => file_out_h_71
  _73 = _36 + 8;
  _74 = argv_16(D) + _73;
  file_out_v_75 = *_74;
  # DEBUG file_out_v => file_out_v_75
  arg_index_76 = arg_index_155 + 3;
  # DEBUG arg_index => arg_index_76
  goto <bb 19>;

  <bb 14>:
  # DEBUG __result => NULL
  # DEBUG __s2_len => 2
  # DEBUG __s2 => __s2_38
  # DEBUG __result => 0
  # DEBUG D#1 => (int) _42
  # DEBUG __result => 103 - D#1
  if (_42 == 103)
    goto <bb 15>;
  else
    goto <bb 18>;

  <bb 15>:
  _56 = MEM[(const unsigned char *)__s2_38 + 2B];
  # DEBUG D#8 => (int) _56
  # DEBUG D#7 => -D#8
  # DEBUG __result => D#7
  # DEBUG __result => D#7
  if (_56 == 0)
    goto <bb 16>;
  else
    goto <bb 18>;

  <bb 16>:
  _59 = arg_index_155 + 1;
  if (argc_13(D) <= _59)
    goto <bb 3>;
  else
    goto <bb 17>;

  <bb 17>:
  # DEBUG gray_file => 1
  _61 = _36 + 4;
  _62 = argv_16(D) + _61;
  file_gray_63 = *_62;
  # DEBUG file_gray => file_gray_63
  arg_index_64 = arg_index_155 + 2;
  # DEBUG arg_index => arg_index_64
  goto <bb 19>;

  <bb 18>:
  # DEBUG __result => NULL
  printf ("Argument \"%s\", is unknown.\n", __s2_38);
  goto <bb 25>;

  <bb 19>:
  # file_out_h_52 = PHI <file_out_h_71(13), file_out_h_168(17)>
  # file_out_v_51 = PHI <file_out_v_75(13), file_out_v_162(17)>
  # file_gray_50 = PHI <file_gray_166(13), file_gray_63(17)>
  # inter_files_49 = PHI <1(13), inter_files_161(17)>
  # gray_file_48 = PHI <gray_file_165(13), 1(17)>
  # arg_index_29 = PHI <arg_index_76(13), arg_index_64(17)>
  # DEBUG arg_index => arg_index_29
  # DEBUG gray_file => gray_file_48
  # DEBUG inter_files => inter_files_49
  # DEBUG file_gray => file_gray_50
  # DEBUG file_out_v => file_out_v_51
  # DEBUG file_out_h => file_out_h_52
  if (argc_13(D) > arg_index_29)
    goto <bb 9>;
  else
    goto <bb 20>;

  <bb 20>:
  # file_out_h_169 = PHI <file_out_h_52(19), file_out_h_32(D)(7)>
  # file_out_v_163 = PHI <file_out_v_51(19), file_out_v_33(D)(7)>
  # file_gray_167 = PHI <file_gray_50(19), file_gray_34(D)(7)>
  # inter_files_164 = PHI <inter_files_49(19), 0(7)>
  # gray_file_160 = PHI <gray_file_48(19), 0(7)>
  width.2_28 = width;
  _30 = width.2_28 * _145;
  rgb_size_31 = _30 * 3;
  readFile (file_in_17, &rgb, rgb_size_31);
  # DEBUG gray_size => D#5
  gray_size.8_79 = (unsigned int) _30;
  gray.9_81 = malloc (gray_size.8_79);
  gray = gray.9_81;
  sobel_h_res.10_84 = malloc (gray_size.8_79);
  sobel_h_res = sobel_h_res.10_84;
  sobel_v_res.11_87 = malloc (gray_size.8_79);
  sobel_v_res = sobel_v_res.11_87;
  contour_img.12_90 = malloc (gray_size.8_79);
  contour_img = contour_img.12_90;
  rgb_size.18_92 = (sizetype) rgb_size_31;
  rgb.19_93 = rgb;
  .omp_data_arr.28.D.5708 = contour_img.12_90;
  .omp_data_arr.28.contour_img = &contour_img;
  .omp_data_arr.28.D.5711 = sobel_v_res.11_87;
  .omp_data_arr.28.sobel_v_res = &sobel_v_res;
  .omp_data_arr.28.D.5714 = sobel_h_res.10_84;
  .omp_data_arr.28.sobel_h_res = &sobel_h_res;
  .omp_data_arr.28.D.5717 = gray.9_81;
  .omp_data_arr.28.gray = &gray;
  .omp_data_arr.28.height = &height;
  .omp_data_arr.28.width = &width;
  .omp_data_arr.28.D.5724 = rgb.19_93;
  .omp_data_arr.28.rgb = &rgb;
  .omp_data_sizes.29[0] = gray_size.8_79;
  .omp_data_sizes.29[1] = 0;
  .omp_data_sizes.29[2] = gray_size.8_79;
  .omp_data_sizes.29[3] = 0;
  .omp_data_sizes.29[4] = gray_size.8_79;
  .omp_data_sizes.29[5] = 0;
  .omp_data_sizes.29[6] = gray_size.8_79;
  .omp_data_sizes.29[7] = 0;
  .omp_data_sizes.29[8] = 4;
  .omp_data_sizes.29[9] = 4;
  .omp_data_sizes.29[10] = rgb_size.18_92;
  .omp_data_sizes.29[11] = 0;
  GOMP_target (-1, main._omp_fn.0, 0B, 12, &.omp_data_arr.28, &.omp_data_sizes.29, &.omp_data_kinds.30);
  .omp_data_sizes.29 ={v} {CLOBBER};
  .omp_data_arr.28 ={v} {CLOBBER};
  if (gray_file_160 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;

  <bb 21>:
  gray.17_121 = gray;
  writeFile (file_gray_167, gray.17_121, _30);

  <bb 22>:
  if (inter_files_164 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;

  <bb 23>:
  sobel_h_res.16_123 = sobel_h_res;
  writeFile (file_out_h_169, sobel_h_res.16_123, _30);
  sobel_v_res.15_125 = sobel_v_res;
  writeFile (file_out_v_163, sobel_v_res.15_125, _30);

  <bb 24>:
  contour_img.14_127 = contour_img;
  writeFile (file_out_18, contour_img.14_127, _30);
  gray.17_129 = gray;
  free (gray.17_129);
  sobel_h_res.16_131 = sobel_h_res;
  free (sobel_h_res.16_131);
  sobel_v_res.15_133 = sobel_v_res;
  free (sobel_v_res.15_133);
  contour_img.14_135 = contour_img;
  free (contour_img.14_135);

  <bb 25>:
  # _9 = PHI <1(3), 1(6), 1(18), 0(24)>
  rgb ={v} {CLOBBER};
  gray ={v} {CLOBBER};
  sobel_h_res ={v} {CLOBBER};
  sobel_v_res ={v} {CLOBBER};
  contour_img ={v} {CLOBBER};
  width ={v} {CLOBBER};
  height ={v} {CLOBBER};
  return _9;

}


